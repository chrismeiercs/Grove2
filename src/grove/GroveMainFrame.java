/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grove;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author seaadmin
 */
public class GroveMainFrame extends javax.swing.JFrame {

    /**
     * Creates new form GroveMainFrame
     */
    public GroveMainFrame() {
        initComponents();
        addActionListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editPileupButton = new javax.swing.JButton();
        alignmentChunkerButton = new javax.swing.JButton();
        groveTitleLabel = new javax.swing.JLabel();
        rnaSeqDiffButton = new javax.swing.JButton();
        pileupGeneMapperButton = new javax.swing.JButton();
        editPileupLabel = new javax.swing.JLabel();
        alignmentChunkerLabel = new javax.swing.JLabel();
        rnaSeqDiffLabel = new javax.swing.JLabel();
        pileupGeneMapperLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        editPileupButton.setText("Edit Pileup");

        alignmentChunkerButton.setText("Alignment Chunker");

        groveTitleLabel.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        groveTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        groveTitleLabel.setText("Grove: RNA-Seq Toolkit");

        rnaSeqDiffButton.setText("RNA-Seq Diff");

        pileupGeneMapperButton.setText("Pileup Gene Mapper");

        editPileupLabel.setText("Fill in missing nucleotides with a count of 0 in pileup files");

        alignmentChunkerLabel.setText("Split an interval file into  files of a specified chunk size");

        rnaSeqDiffLabel.setText("Calculate the read difference between capped and uncapped files");

        pileupGeneMapperLabel.setText("Compile read counts up and downstream of gene starts and stops");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(groveTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(pileupGeneMapperLabel)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(rnaSeqDiffLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(163, 163, 163)
                                .addComponent(alignmentChunkerButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(192, 192, 192)
                                .addComponent(editPileupButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(alignmentChunkerLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(183, 183, 183)
                                .addComponent(rnaSeqDiffButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(editPileupLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(pileupGeneMapperButton)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(groveTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editPileupButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editPileupLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alignmentChunkerButton)
                .addGap(18, 18, 18)
                .addComponent(alignmentChunkerLabel)
                .addGap(24, 24, 24)
                .addComponent(rnaSeqDiffButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rnaSeqDiffLabel)
                .addGap(24, 24, 24)
                .addComponent(pileupGeneMapperButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pileupGeneMapperLabel)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GroveMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GroveMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GroveMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GroveMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GroveMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alignmentChunkerButton;
    private javax.swing.JLabel alignmentChunkerLabel;
    private javax.swing.JButton editPileupButton;
    private javax.swing.JLabel editPileupLabel;
    private javax.swing.JLabel groveTitleLabel;
    private javax.swing.JButton pileupGeneMapperButton;
    private javax.swing.JLabel pileupGeneMapperLabel;
    private javax.swing.JButton rnaSeqDiffButton;
    private javax.swing.JLabel rnaSeqDiffLabel;
    // End of variables declaration//GEN-END:variables

    private void addActionListeners(){
        MainFrameActionListener listener = new MainFrameActionListener();
        editPileupButton.addActionListener(listener);
        alignmentChunkerButton.addActionListener(listener);
        rnaSeqDiffButton.addActionListener(listener);
        pileupGeneMapperButton.addActionListener(listener);
    }

public class MainFrameActionListener implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent e) {
            Object source = e.getSource();
            
            if(source.equals(editPileupButton)){
                new EditPileupFrame().setVisible(true);
            }
            
            if(source.equals(alignmentChunkerButton)){
                new AlignmentChunkerFrame().setVisible(true);
            }
            
            if(source.equals(rnaSeqDiffButton)){
                new RNASeqDiffFrame().setVisible(true);
            }
            
            if(source.equals(pileupGeneMapperButton)){
                new PileupGeneMapperFrame().setVisible(true);
            }
        }
    
}


}
